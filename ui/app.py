# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1X_0aKYETQoAUYBY6eFciyjTgDgO_Lw_s
"""

import streamlit as st
import pandas as pd
import numpy as np
import pickle
import matplotlib.pyplot as plt
import seaborn as sns

# Load trained model
model = pickle.load(open("models/final_model.pkl", "rb"))

st.set_page_config(page_title="Heart Disease Prediction", layout="wide")

st.title("❤️ Heart Disease Prediction App")

st.write("Enter patient health information to predict the risk of heart disease.")

# Sidebar inputs
st.sidebar.header("Patient Data Input")

def user_input_features():
    age = st.sidebar.slider("Age", 20, 100, 50)
    sex = st.sidebar.selectbox("Sex (1=Male, 0=Female)", [1, 0])
    cp = st.sidebar.selectbox("Chest Pain Type (0–3)", [0, 1, 2, 3])
    trestbps = st.sidebar.slider("Resting Blood Pressure", 80, 200, 120)
    chol = st.sidebar.slider("Serum Cholesterol (mg/dl)", 100, 600, 200)
    fbs = st.sidebar.selectbox("Fasting Blood Sugar > 120 mg/dl (1=True, 0=False)", [1, 0])
    restecg = st.sidebar.selectbox("Resting ECG (0–2)", [0, 1, 2])
    thalach = st.sidebar.slider("Max Heart Rate Achieved", 70, 210, 150)
    exang = st.sidebar.selectbox("Exercise Induced Angina (1=Yes, 0=No)", [1, 0])
    oldpeak = st.sidebar.slider("ST Depression Induced", 0.0, 6.0, 1.0)
    slope = st.sidebar.selectbox("Slope of Peak Exercise ST", [0, 1, 2])
    ca = st.sidebar.selectbox("Number of Major Vessels (0–3)", [0, 1, 2, 3])
    thal = st.sidebar.selectbox("Thalassemia (1=Normal, 2=Fixed, 3=Reversible)", [1, 2, 3])

    data = {
        "age": age,
        "sex": sex,
        "cp": cp,
        "trestbps": trestbps,
        "chol": chol,
        "fbs": fbs,
        "restecg": restecg,
        "thalach": thalach,
        "exang": exang,
        "oldpeak": oldpeak,
        "slope": slope,
        "ca": ca,
        "thal": thal
    }
    return pd.DataFrame(data, index=[0])

input_df = user_input_features()

# Prediction
prediction = model.predict(input_df)
prediction_proba = model.predict_proba(input_df)

st.subheader("Prediction Result")
if prediction[0] == 1:
    st.error(f"⚠️ High Risk of Heart Disease (Probability: {prediction_proba[0][1]:.2f})")
else:
    st.success(f"✅ Low Risk of Heart Disease (Probability: {prediction_proba[0][0]:.2f})")

# Data Visualization Section
st.subheader("Heart Disease Trends (Sample Data)")

# Load dataset for visualization
df = pd.read_csv("../data/heart_disease.csv")

col1, col2 = st.columns(2)

with col1:
    st.write("Heart Disease by Age")
    fig, ax = plt.subplots()
    sns.histplot(df, x="age", hue="target", multiple="stack", ax=ax, bins=20)
    st.pyplot(fig)

with col2:
    st.write("Cholesterol Levels vs Heart Disease")
    fig, ax = plt.subplots()
    sns.boxplot(x="target", y="chol", data=df, ax=ax)
    st.pyplot(fig)